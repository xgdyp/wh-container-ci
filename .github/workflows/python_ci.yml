# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package


on:
  issues:
    types: [opened, edited]
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # matrix:
        # python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        # python -m pip install pyyaml
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Get issue body
      id: issue
      uses: actions/github-script@v6
      with:
        script: |
          const issue = await github.rest.issues.get({
          owner: context.repo.owner,
          repo: context.repo.repo,
          issue_number: context.issue.number
          });
          const issueBody = issue.data.body;
          console.log(issueBody);
          core.setOutput('issue_content', issueBody);
          const filePath = ('issue-content.md');
          const fs = require('fs');
          const path = require('path');
          fs.writeFileSync(filePath, issueBody);
    
    - name: Process ISSUE to JSON
      run: |
        python image_process.py
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test
      env:
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      run: |
        echo "hello world!${ACR_USERNAME}"

    # - uses: hhyasdf/image-sync-action@v1.1
    #   with:
    #     auth_file: ./auth.yaml # The auth information file of registries, optional.
    #     images_file: ./images.json # The images file descirbes which images need to sync, always needed.
    #     version: latest # The version of image-syncer, use the latest version if not specified.
    #     proc: 6 # The max number of goroutines to sync images, default value is 5.
    #   env:
    #     ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
    #     ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}