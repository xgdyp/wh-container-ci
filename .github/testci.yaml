name: Issue Triggered Image Sync

on:
  issues:
    types: [opened, edited]

jobs:
  process-issue-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get issue body
        id: issue
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const issueBody = issue.data.body;
            
            // Check if issue body exists and has content
            if (!issueBody || issueBody.trim() === '') {
              core.setFailed('Issue body is empty');
              return;
            }
            
            // Extract list items from issue body
            const listItems = issueBody
              .split('\n')
              .map(line => line.trim())
              .filter(line => line.startsWith('-'))
              .map(line => line.substring(1).trim());
            
            if (listItems.length === 0) {
              core.setFailed('No list items found in issue body');
              return;
            }
            
            // Convert list to YAML format
            const yaml = {
              images: listItems.reduce((obj, item) => {
                const parts = item.split(':');
                if (parts.length >= 2) {
                  const source = parts[0].trim();
                  const target = parts[1].trim();
                  obj[source] = target;
                }
                return obj;
              }, {})
            };
            
            const yamlString = JSON.stringify(yaml);
            core.setOutput('yaml_content', yamlString);
            
            // Write YAML to file
            const fs = require('fs');
            fs.writeFileSync('image-sync-config.yaml', require('js-yaml').dump(yaml));
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install js-yaml
        run: npm install js-yaml
      
      - name: Create YAML file
        run: |
          echo '${{ steps.issue.outputs.yaml_content }}' > image-sync-config.json
          npx js-yaml image-sync-config.json > image-sync-config.yaml
      
      - name: Run image-syncer
        id: image-syncer
        uses: docker://registry.cn-hangzhou.aliyuncs.com/aliyuncontainer/image-syncer:v1.3.1
        with:
          args: --config=image-sync-config.yaml --proc=6 --retries=3 --log-file=sync-log.txt
      
      - name: Parse sync results
        id: parse-results
        run: |
          if [ -f "sync-log.txt" ]; then
            echo "SYNC_LOG<<EOF" >> $GITHUB_ENV
            cat sync-log.txt >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            # Extract synced images from log
            echo "SYNCED_IMAGES<<EOF" >> $GITHUB_ENV
            grep -E "registry.+successfully" sync-log.txt | awk '{print "- " $1}' >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "SYNC_LOG=No sync log found" >> $GITHUB_ENV
            echo "SYNCED_IMAGES=No successfully synced images found" >> $GITHUB_ENV
          fi
      
      - name: Comment on issue with results
        uses: actions/github-script@v6
        with:
          script: |
            // Get the configuration used
            const configContent = require('fs').readFileSync('image-sync-config.yaml', 'utf8');
            
            // Format the sync log to extract only relevant information
            const syncLog = process.env.SYNC_LOG;
            const syncedImages = process.env.SYNCED_IMAGES;
            
            // Create the comment body
            const commentBody = `## ðŸ“¦ Image Sync Completed
            
            ### Configuration Used
            \`\`\`yaml
            ${configContent}
            \`\`\`
            
            ### Successfully Synced Images
            ${syncedImages}
            
            ### Sync Details
            <details>
              <summary>View full sync log</summary>
              
              \`\`\`
              ${syncLog}
              \`\`\`
            </details>
            `;
            
            // Post the comment
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });